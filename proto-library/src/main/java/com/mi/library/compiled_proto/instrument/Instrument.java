// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: instrument.proto

package instrument;

public final class Instrument {
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_instrument_TinkoffInstrument_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_instrument_TinkoffInstrument_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_instrument_TinkoffInstrument_Money_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_instrument_TinkoffInstrument_Money_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\020instrument.proto\022\ninstrument\"\353\003\n\021Tinko" +
                        "ffInstrument\022\013\n\003uID\030\001 \001(\t\022\014\n\004figi\030\002 \001(\t\022" +
                        "\016\n\006ticker\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\022\014\n\004type\030\005 " +
                        "\001(\t\022\034\n\024country_of_risk_name\030\006 \001(\t\022\013\n\003lot" +
                        "\030\007 \001(\005\022\020\n\010currency\030\010 \001(\t\022E\n\030current_inst" +
                        "rument_price\030\t \001(\0132#.instrument.TinkoffI" +
                        "nstrument.Money\022>\n\021current_lot_price\030\n \001" +
                        "(\0132#.instrument.TinkoffInstrument.Money\022" +
                        "\035\n\025securityTradingStatus\030\013 \001(\t\022 \n\030api_tr" +
                        "ade_available_flag\030\014 \001(\010\022\032\n\022buy_availabl" +
                        "e_flag\030\r \001(\010\022\033\n\023sell_available_flag\030\016 \001(" +
                        "\010\022\020\n\010exchange\030\017 \001(\t\022\025\n\rreal_exchange\030\020 \001" +
                        "(\t\032(\n\005Money\022\r\n\005price\030\001 \001(\t\022\020\n\010currency\030\002" +
                        " \001(\tB\033\n\ninstrumentB\nInstrument\240\001\001b\006proto" +
                        "3"
        };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        });
        internal_static_instrument_TinkoffInstrument_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_instrument_TinkoffInstrument_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_instrument_TinkoffInstrument_descriptor,
                new java.lang.String[]{"UID", "Figi", "Ticker", "Name", "Type", "CountryOfRiskName", "Lot", "Currency", "CurrentInstrumentPrice", "CurrentLotPrice", "SecurityTradingStatus", "ApiTradeAvailableFlag", "BuyAvailableFlag", "SellAvailableFlag", "Exchange", "RealExchange",});
        internal_static_instrument_TinkoffInstrument_Money_descriptor =
                internal_static_instrument_TinkoffInstrument_descriptor.getNestedTypes().get(0);
        internal_static_instrument_TinkoffInstrument_Money_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_instrument_TinkoffInstrument_Money_descriptor,
                new java.lang.String[]{"Price", "Currency",});
    }
    private Instrument() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    public interface TinkoffInstrumentOrBuilder extends
            // @@protoc_insertion_point(interface_extends:instrument.TinkoffInstrument)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>string uID = 1;</code>
         *
         * @return The uID.
         */
        java.lang.String getUID();

        /**
         * <code>string uID = 1;</code>
         *
         * @return The bytes for uID.
         */
        com.google.protobuf.ByteString
        getUIDBytes();

        /**
         * <code>string figi = 2;</code>
         *
         * @return The figi.
         */
        java.lang.String getFigi();

        /**
         * <code>string figi = 2;</code>
         *
         * @return The bytes for figi.
         */
        com.google.protobuf.ByteString
        getFigiBytes();

        /**
         * <code>string ticker = 3;</code>
         *
         * @return The ticker.
         */
        java.lang.String getTicker();

        /**
         * <code>string ticker = 3;</code>
         *
         * @return The bytes for ticker.
         */
        com.google.protobuf.ByteString
        getTickerBytes();

        /**
         * <code>string name = 4;</code>
         *
         * @return The name.
         */
        java.lang.String getName();

        /**
         * <code>string name = 4;</code>
         *
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <code>string type = 5;</code>
         *
         * @return The type.
         */
        java.lang.String getType();

        /**
         * <code>string type = 5;</code>
         *
         * @return The bytes for type.
         */
        com.google.protobuf.ByteString
        getTypeBytes();

        /**
         * <code>string country_of_risk_name = 6;</code>
         *
         * @return The countryOfRiskName.
         */
        java.lang.String getCountryOfRiskName();

        /**
         * <code>string country_of_risk_name = 6;</code>
         *
         * @return The bytes for countryOfRiskName.
         */
        com.google.protobuf.ByteString
        getCountryOfRiskNameBytes();

        /**
         * <code>int32 lot = 7;</code>
         *
         * @return The lot.
         */
        int getLot();

        /**
         * <code>string currency = 8;</code>
         *
         * @return The currency.
         */
        java.lang.String getCurrency();

        /**
         * <code>string currency = 8;</code>
         *
         * @return The bytes for currency.
         */
        com.google.protobuf.ByteString
        getCurrencyBytes();

        /**
         * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
         *
         * @return Whether the currentInstrumentPrice field is set.
         */
        boolean hasCurrentInstrumentPrice();

        /**
         * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
         *
         * @return The currentInstrumentPrice.
         */
        instrument.Instrument.TinkoffInstrument.Money getCurrentInstrumentPrice();

        /**
         * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
         */
        instrument.Instrument.TinkoffInstrument.MoneyOrBuilder getCurrentInstrumentPriceOrBuilder();

        /**
         * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
         *
         * @return Whether the currentLotPrice field is set.
         */
        boolean hasCurrentLotPrice();

        /**
         * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
         *
         * @return The currentLotPrice.
         */
        instrument.Instrument.TinkoffInstrument.Money getCurrentLotPrice();

        /**
         * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
         */
        instrument.Instrument.TinkoffInstrument.MoneyOrBuilder getCurrentLotPriceOrBuilder();

        /**
         * <code>string securityTradingStatus = 11;</code>
         *
         * @return The securityTradingStatus.
         */
        java.lang.String getSecurityTradingStatus();

        /**
         * <code>string securityTradingStatus = 11;</code>
         *
         * @return The bytes for securityTradingStatus.
         */
        com.google.protobuf.ByteString
        getSecurityTradingStatusBytes();

        /**
         * <code>bool api_trade_available_flag = 12;</code>
         *
         * @return The apiTradeAvailableFlag.
         */
        boolean getApiTradeAvailableFlag();

        /**
         * <code>bool buy_available_flag = 13;</code>
         *
         * @return The buyAvailableFlag.
         */
        boolean getBuyAvailableFlag();

        /**
         * <code>bool sell_available_flag = 14;</code>
         *
         * @return The sellAvailableFlag.
         */
        boolean getSellAvailableFlag();

        /**
         * <code>string exchange = 15;</code>
         *
         * @return The exchange.
         */
        java.lang.String getExchange();

        /**
         * <code>string exchange = 15;</code>
         *
         * @return The bytes for exchange.
         */
        com.google.protobuf.ByteString
        getExchangeBytes();

        /**
         * <code>string real_exchange = 16;</code>
         *
         * @return The realExchange.
         */
        java.lang.String getRealExchange();

        /**
         * <code>string real_exchange = 16;</code>
         *
         * @return The bytes for realExchange.
         */
        com.google.protobuf.ByteString
        getRealExchangeBytes();
    }

    /**
     * Protobuf type {@code instrument.TinkoffInstrument}
     */
    public static final class TinkoffInstrument extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:instrument.TinkoffInstrument)
            TinkoffInstrumentOrBuilder {
        public static final int UID_FIELD_NUMBER = 1;
        public static final int FIGI_FIELD_NUMBER = 2;
        public static final int TICKER_FIELD_NUMBER = 3;
        public static final int NAME_FIELD_NUMBER = 4;
        public static final int TYPE_FIELD_NUMBER = 5;
        public static final int COUNTRY_OF_RISK_NAME_FIELD_NUMBER = 6;
        public static final int LOT_FIELD_NUMBER = 7;
        public static final int CURRENCY_FIELD_NUMBER = 8;
        public static final int CURRENT_INSTRUMENT_PRICE_FIELD_NUMBER = 9;
        public static final int CURRENT_LOT_PRICE_FIELD_NUMBER = 10;
        public static final int SECURITYTRADINGSTATUS_FIELD_NUMBER = 11;
        public static final int API_TRADE_AVAILABLE_FLAG_FIELD_NUMBER = 12;
        public static final int BUY_AVAILABLE_FLAG_FIELD_NUMBER = 13;
        public static final int SELL_AVAILABLE_FLAG_FIELD_NUMBER = 14;
        public static final int EXCHANGE_FIELD_NUMBER = 15;
        public static final int REAL_EXCHANGE_FIELD_NUMBER = 16;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:instrument.TinkoffInstrument)
        private static final instrument.Instrument.TinkoffInstrument DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<TinkoffInstrument>
                PARSER = new com.google.protobuf.AbstractParser<TinkoffInstrument>() {
            @java.lang.Override
            public TinkoffInstrument parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e)
                            .setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        static {
            DEFAULT_INSTANCE = new instrument.Instrument.TinkoffInstrument();
        }

        @SuppressWarnings("serial")
        private volatile java.lang.Object uID_ = "";
        @SuppressWarnings("serial")
        private volatile java.lang.Object figi_ = "";
        @SuppressWarnings("serial")
        private volatile java.lang.Object ticker_ = "";
        @SuppressWarnings("serial")
        private volatile java.lang.Object name_ = "";
        @SuppressWarnings("serial")
        private volatile java.lang.Object type_ = "";
        @SuppressWarnings("serial")
        private volatile java.lang.Object countryOfRiskName_ = "";
        private int lot_ = 0;
        @SuppressWarnings("serial")
        private volatile java.lang.Object currency_ = "";
        private instrument.Instrument.TinkoffInstrument.Money currentInstrumentPrice_;
        private instrument.Instrument.TinkoffInstrument.Money currentLotPrice_;
        @SuppressWarnings("serial")
        private volatile java.lang.Object securityTradingStatus_ = "";
        private boolean apiTradeAvailableFlag_ = false;
        private boolean buyAvailableFlag_ = false;
        private boolean sellAvailableFlag_ = false;
        @SuppressWarnings("serial")
        private volatile java.lang.Object exchange_ = "";
        @SuppressWarnings("serial")
        private volatile java.lang.Object realExchange_ = "";
        private byte memoizedIsInitialized = -1;
        // Use TinkoffInstrument.newBuilder() to construct.
        private TinkoffInstrument(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private TinkoffInstrument() {
            uID_ = "";
            figi_ = "";
            ticker_ = "";
            name_ = "";
            type_ = "";
            countryOfRiskName_ = "";
            currency_ = "";
            securityTradingStatus_ = "";
            exchange_ = "";
            realExchange_ = "";
        }

        public static com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return instrument.Instrument.internal_static_instrument_TinkoffInstrument_descriptor;
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static instrument.Instrument.TinkoffInstrument parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static instrument.Instrument.TinkoffInstrument parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static instrument.Instrument.TinkoffInstrument parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(instrument.Instrument.TinkoffInstrument prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static instrument.Instrument.TinkoffInstrument getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<TinkoffInstrument> parser() {
            return PARSER;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
                UnusedPrivateParameter unused) {
            return new TinkoffInstrument();
        }

        @java.lang.Override
        public com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return instrument.Instrument.internal_static_instrument_TinkoffInstrument_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            instrument.Instrument.TinkoffInstrument.class, instrument.Instrument.TinkoffInstrument.Builder.class);
        }

        /**
         * <code>string uID = 1;</code>
         *
         * @return The uID.
         */
        @java.lang.Override
        public java.lang.String getUID() {
            java.lang.Object ref = uID_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                uID_ = s;
                return s;
            }
        }

        /**
         * <code>string uID = 1;</code>
         *
         * @return The bytes for uID.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getUIDBytes() {
            java.lang.Object ref = uID_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                uID_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string figi = 2;</code>
         *
         * @return The figi.
         */
        @java.lang.Override
        public java.lang.String getFigi() {
            java.lang.Object ref = figi_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                figi_ = s;
                return s;
            }
        }

        /**
         * <code>string figi = 2;</code>
         *
         * @return The bytes for figi.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getFigiBytes() {
            java.lang.Object ref = figi_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                figi_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string ticker = 3;</code>
         *
         * @return The ticker.
         */
        @java.lang.Override
        public java.lang.String getTicker() {
            java.lang.Object ref = ticker_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                ticker_ = s;
                return s;
            }
        }

        /**
         * <code>string ticker = 3;</code>
         *
         * @return The bytes for ticker.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getTickerBytes() {
            java.lang.Object ref = ticker_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                ticker_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string name = 4;</code>
         *
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }

        /**
         * <code>string name = 4;</code>
         *
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string type = 5;</code>
         *
         * @return The type.
         */
        @java.lang.Override
        public java.lang.String getType() {
            java.lang.Object ref = type_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                type_ = s;
                return s;
            }
        }

        /**
         * <code>string type = 5;</code>
         *
         * @return The bytes for type.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getTypeBytes() {
            java.lang.Object ref = type_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                type_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string country_of_risk_name = 6;</code>
         *
         * @return The countryOfRiskName.
         */
        @java.lang.Override
        public java.lang.String getCountryOfRiskName() {
            java.lang.Object ref = countryOfRiskName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                countryOfRiskName_ = s;
                return s;
            }
        }

        /**
         * <code>string country_of_risk_name = 6;</code>
         *
         * @return The bytes for countryOfRiskName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getCountryOfRiskNameBytes() {
            java.lang.Object ref = countryOfRiskName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                countryOfRiskName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>int32 lot = 7;</code>
         *
         * @return The lot.
         */
        @java.lang.Override
        public int getLot() {
            return lot_;
        }

        /**
         * <code>string currency = 8;</code>
         *
         * @return The currency.
         */
        @java.lang.Override
        public java.lang.String getCurrency() {
            java.lang.Object ref = currency_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                currency_ = s;
                return s;
            }
        }

        /**
         * <code>string currency = 8;</code>
         *
         * @return The bytes for currency.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getCurrencyBytes() {
            java.lang.Object ref = currency_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                currency_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
         *
         * @return Whether the currentInstrumentPrice field is set.
         */
        @java.lang.Override
        public boolean hasCurrentInstrumentPrice() {
            return currentInstrumentPrice_ != null;
        }

        /**
         * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
         *
         * @return The currentInstrumentPrice.
         */
        @java.lang.Override
        public instrument.Instrument.TinkoffInstrument.Money getCurrentInstrumentPrice() {
            return currentInstrumentPrice_ == null ? instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentInstrumentPrice_;
        }

        /**
         * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
         */
        @java.lang.Override
        public instrument.Instrument.TinkoffInstrument.MoneyOrBuilder getCurrentInstrumentPriceOrBuilder() {
            return currentInstrumentPrice_ == null ? instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentInstrumentPrice_;
        }

        /**
         * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
         *
         * @return Whether the currentLotPrice field is set.
         */
        @java.lang.Override
        public boolean hasCurrentLotPrice() {
            return currentLotPrice_ != null;
        }

        /**
         * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
         *
         * @return The currentLotPrice.
         */
        @java.lang.Override
        public instrument.Instrument.TinkoffInstrument.Money getCurrentLotPrice() {
            return currentLotPrice_ == null ? instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentLotPrice_;
        }

        /**
         * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
         */
        @java.lang.Override
        public instrument.Instrument.TinkoffInstrument.MoneyOrBuilder getCurrentLotPriceOrBuilder() {
            return currentLotPrice_ == null ? instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentLotPrice_;
        }

        /**
         * <code>string securityTradingStatus = 11;</code>
         *
         * @return The securityTradingStatus.
         */
        @java.lang.Override
        public java.lang.String getSecurityTradingStatus() {
            java.lang.Object ref = securityTradingStatus_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                securityTradingStatus_ = s;
                return s;
            }
        }

        /**
         * <code>string securityTradingStatus = 11;</code>
         *
         * @return The bytes for securityTradingStatus.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getSecurityTradingStatusBytes() {
            java.lang.Object ref = securityTradingStatus_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                securityTradingStatus_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>bool api_trade_available_flag = 12;</code>
         *
         * @return The apiTradeAvailableFlag.
         */
        @java.lang.Override
        public boolean getApiTradeAvailableFlag() {
            return apiTradeAvailableFlag_;
        }

        /**
         * <code>bool buy_available_flag = 13;</code>
         *
         * @return The buyAvailableFlag.
         */
        @java.lang.Override
        public boolean getBuyAvailableFlag() {
            return buyAvailableFlag_;
        }

        /**
         * <code>bool sell_available_flag = 14;</code>
         *
         * @return The sellAvailableFlag.
         */
        @java.lang.Override
        public boolean getSellAvailableFlag() {
            return sellAvailableFlag_;
        }

        /**
         * <code>string exchange = 15;</code>
         *
         * @return The exchange.
         */
        @java.lang.Override
        public java.lang.String getExchange() {
            java.lang.Object ref = exchange_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                exchange_ = s;
                return s;
            }
        }

        /**
         * <code>string exchange = 15;</code>
         *
         * @return The bytes for exchange.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getExchangeBytes() {
            java.lang.Object ref = exchange_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                exchange_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string real_exchange = 16;</code>
         *
         * @return The realExchange.
         */
        @java.lang.Override
        public java.lang.String getRealExchange() {
            java.lang.Object ref = realExchange_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                realExchange_ = s;
                return s;
            }
        }

        /**
         * <code>string real_exchange = 16;</code>
         *
         * @return The bytes for realExchange.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
        getRealExchangeBytes() {
            java.lang.Object ref = realExchange_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                realExchange_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        @java.lang.Override
        public boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uID_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uID_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(figi_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, figi_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ticker_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ticker_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, name_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, type_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(countryOfRiskName_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, countryOfRiskName_);
            }
            if (lot_ != 0) {
                output.writeInt32(7, lot_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(currency_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 8, currency_);
            }
            if (currentInstrumentPrice_ != null) {
                output.writeMessage(9, getCurrentInstrumentPrice());
            }
            if (currentLotPrice_ != null) {
                output.writeMessage(10, getCurrentLotPrice());
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(securityTradingStatus_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 11, securityTradingStatus_);
            }
            if (apiTradeAvailableFlag_) {
                output.writeBool(12, apiTradeAvailableFlag_);
            }
            if (buyAvailableFlag_) {
                output.writeBool(13, buyAvailableFlag_);
            }
            if (sellAvailableFlag_) {
                output.writeBool(14, sellAvailableFlag_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchange_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 15, exchange_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(realExchange_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 16, realExchange_);
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uID_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uID_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(figi_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, figi_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ticker_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ticker_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, name_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, type_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(countryOfRiskName_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, countryOfRiskName_);
            }
            if (lot_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(7, lot_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(currency_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, currency_);
            }
            if (currentInstrumentPrice_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, getCurrentInstrumentPrice());
            }
            if (currentLotPrice_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(10, getCurrentLotPrice());
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(securityTradingStatus_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, securityTradingStatus_);
            }
            if (apiTradeAvailableFlag_) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(12, apiTradeAvailableFlag_);
            }
            if (buyAvailableFlag_) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(13, buyAvailableFlag_);
            }
            if (sellAvailableFlag_) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(14, sellAvailableFlag_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchange_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, exchange_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(realExchange_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, realExchange_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof TinkoffInstrument other)) {
                return super.equals(obj);
            }

            if (!getUID()
                    .equals(other.getUID())) return false;
            if (!getFigi()
                    .equals(other.getFigi())) return false;
            if (!getTicker()
                    .equals(other.getTicker())) return false;
            if (!getName()
                    .equals(other.getName())) return false;
            if (!getType()
                    .equals(other.getType())) return false;
            if (!getCountryOfRiskName()
                    .equals(other.getCountryOfRiskName())) return false;
            if (getLot()
                    != other.getLot()) return false;
            if (!getCurrency()
                    .equals(other.getCurrency())) return false;
            if (hasCurrentInstrumentPrice() != other.hasCurrentInstrumentPrice()) return false;
            if (hasCurrentInstrumentPrice()) {
                if (!getCurrentInstrumentPrice()
                        .equals(other.getCurrentInstrumentPrice())) return false;
            }
            if (hasCurrentLotPrice() != other.hasCurrentLotPrice()) return false;
            if (hasCurrentLotPrice()) {
                if (!getCurrentLotPrice()
                        .equals(other.getCurrentLotPrice())) return false;
            }
            if (!getSecurityTradingStatus()
                    .equals(other.getSecurityTradingStatus())) return false;
            if (getApiTradeAvailableFlag()
                    != other.getApiTradeAvailableFlag()) return false;
            if (getBuyAvailableFlag()
                    != other.getBuyAvailableFlag()) return false;
            if (getSellAvailableFlag()
                    != other.getSellAvailableFlag()) return false;
            if (!getExchange()
                    .equals(other.getExchange())) return false;
            if (!getRealExchange()
                    .equals(other.getRealExchange())) return false;
            return getUnknownFields().equals(other.getUnknownFields());
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + UID_FIELD_NUMBER;
            hash = (53 * hash) + getUID().hashCode();
            hash = (37 * hash) + FIGI_FIELD_NUMBER;
            hash = (53 * hash) + getFigi().hashCode();
            hash = (37 * hash) + TICKER_FIELD_NUMBER;
            hash = (53 * hash) + getTicker().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getType().hashCode();
            hash = (37 * hash) + COUNTRY_OF_RISK_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getCountryOfRiskName().hashCode();
            hash = (37 * hash) + LOT_FIELD_NUMBER;
            hash = (53 * hash) + getLot();
            hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
            hash = (53 * hash) + getCurrency().hashCode();
            if (hasCurrentInstrumentPrice()) {
                hash = (37 * hash) + CURRENT_INSTRUMENT_PRICE_FIELD_NUMBER;
                hash = (53 * hash) + getCurrentInstrumentPrice().hashCode();
            }
            if (hasCurrentLotPrice()) {
                hash = (37 * hash) + CURRENT_LOT_PRICE_FIELD_NUMBER;
                hash = (53 * hash) + getCurrentLotPrice().hashCode();
            }
            hash = (37 * hash) + SECURITYTRADINGSTATUS_FIELD_NUMBER;
            hash = (53 * hash) + getSecurityTradingStatus().hashCode();
            hash = (37 * hash) + API_TRADE_AVAILABLE_FLAG_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getApiTradeAvailableFlag());
            hash = (37 * hash) + BUY_AVAILABLE_FLAG_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getBuyAvailableFlag());
            hash = (37 * hash) + SELL_AVAILABLE_FLAG_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getSellAvailableFlag());
            hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
            hash = (53 * hash) + getExchange().hashCode();
            hash = (37 * hash) + REAL_EXCHANGE_FIELD_NUMBER;
            hash = (53 * hash) + getRealExchange().hashCode();
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TinkoffInstrument> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public instrument.Instrument.TinkoffInstrument getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        public interface MoneyOrBuilder extends
                // @@protoc_insertion_point(interface_extends:instrument.TinkoffInstrument.Money)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string price = 1;</code>
             *
             * @return The price.
             */
            java.lang.String getPrice();

            /**
             * <code>string price = 1;</code>
             *
             * @return The bytes for price.
             */
            com.google.protobuf.ByteString
            getPriceBytes();

            /**
             * <code>string currency = 2;</code>
             *
             * @return The currency.
             */
            java.lang.String getCurrency();

            /**
             * <code>string currency = 2;</code>
             *
             * @return The bytes for currency.
             */
            com.google.protobuf.ByteString
            getCurrencyBytes();
        }

        /**
         * Protobuf type {@code instrument.TinkoffInstrument.Money}
         */
        public static final class Money extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:instrument.TinkoffInstrument.Money)
                MoneyOrBuilder {
            public static final int PRICE_FIELD_NUMBER = 1;
            public static final int CURRENCY_FIELD_NUMBER = 2;
            private static final long serialVersionUID = 0L;
            // @@protoc_insertion_point(class_scope:instrument.TinkoffInstrument.Money)
            private static final instrument.Instrument.TinkoffInstrument.Money DEFAULT_INSTANCE;
            private static final com.google.protobuf.Parser<Money>
                    PARSER = new com.google.protobuf.AbstractParser<Money>() {
                @java.lang.Override
                public Money parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    Builder builder = newBuilder();
                    try {
                        builder.mergeFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(builder.buildPartial());
                    } catch (com.google.protobuf.UninitializedMessageException e) {
                        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                    } catch (java.io.IOException e) {
                        throw new com.google.protobuf.InvalidProtocolBufferException(e)
                                .setUnfinishedMessage(builder.buildPartial());
                    }
                    return builder.buildPartial();
                }
            };

            static {
                DEFAULT_INSTANCE = new instrument.Instrument.TinkoffInstrument.Money();
            }

            @SuppressWarnings("serial")
            private volatile java.lang.Object price_ = "";
            @SuppressWarnings("serial")
            private volatile java.lang.Object currency_ = "";
            private byte memoizedIsInitialized = -1;

            // Use Money.newBuilder() to construct.
            private Money(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }

            private Money() {
                price_ = "";
                currency_ = "";
            }

            public static com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return instrument.Instrument.internal_static_instrument_TinkoffInstrument_Money_descriptor;
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static instrument.Instrument.TinkoffInstrument.Money parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(instrument.Instrument.TinkoffInstrument.Money prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public static instrument.Instrument.TinkoffInstrument.Money getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static com.google.protobuf.Parser<Money> parser() {
                return PARSER;
            }

            @java.lang.Override
            @SuppressWarnings({"unused"})
            protected java.lang.Object newInstance(
                    UnusedPrivateParameter unused) {
                return new Money();
            }

            @java.lang.Override
            public com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return instrument.Instrument.internal_static_instrument_TinkoffInstrument_Money_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                instrument.Instrument.TinkoffInstrument.Money.class, instrument.Instrument.TinkoffInstrument.Money.Builder.class);
            }

            /**
             * <code>string price = 1;</code>
             *
             * @return The price.
             */
            @java.lang.Override
            public java.lang.String getPrice() {
                java.lang.Object ref = price_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    price_ = s;
                    return s;
                }
            }

            /**
             * <code>string price = 1;</code>
             *
             * @return The bytes for price.
             */
            @java.lang.Override
            public com.google.protobuf.ByteString
            getPriceBytes() {
                java.lang.Object ref = price_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    price_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string currency = 2;</code>
             *
             * @return The currency.
             */
            @java.lang.Override
            public java.lang.String getCurrency() {
                java.lang.Object ref = currency_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    currency_ = s;
                    return s;
                }
            }

            /**
             * <code>string currency = 2;</code>
             *
             * @return The bytes for currency.
             */
            @java.lang.Override
            public com.google.protobuf.ByteString
            getCurrencyBytes() {
                java.lang.Object ref = currency_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    currency_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            @java.lang.Override
            public boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            @java.lang.Override
            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(price_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, price_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(currency_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, currency_);
                }
                getUnknownFields().writeTo(output);
            }

            @java.lang.Override
            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(price_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, price_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(currency_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, currency_);
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof Money other)) {
                    return super.equals(obj);
                }

                if (!getPrice()
                        .equals(other.getPrice())) return false;
                if (!getCurrency()
                        .equals(other.getCurrency())) return false;
                return getUnknownFields().equals(other.getUnknownFields());
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + PRICE_FIELD_NUMBER;
                hash = (53 * hash) + getPrice().hashCode();
                hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
                hash = (53 * hash) + getCurrency().hashCode();
                hash = (29 * hash) + getUnknownFields().hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            @java.lang.Override
            public Builder newBuilderForType() {
                return newBuilder();
            }

            @java.lang.Override
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<Money> getParserForType() {
                return PARSER;
            }

            @java.lang.Override
            public instrument.Instrument.TinkoffInstrument.Money getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

            /**
             * Protobuf type {@code instrument.TinkoffInstrument.Money}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:instrument.TinkoffInstrument.Money)
                    instrument.Instrument.TinkoffInstrument.MoneyOrBuilder {
                private int bitField0_;
                private java.lang.Object price_ = "";
                private java.lang.Object currency_ = "";

                // Construct using instrument.Instrument.TinkoffInstrument.Money.newBuilder()
                private Builder() {

                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);

                }

                public static com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return instrument.Instrument.internal_static_instrument_TinkoffInstrument_Money_descriptor;
                }

                @java.lang.Override
                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return instrument.Instrument.internal_static_instrument_TinkoffInstrument_Money_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    instrument.Instrument.TinkoffInstrument.Money.class, instrument.Instrument.TinkoffInstrument.Money.Builder.class);
                }

                @java.lang.Override
                public Builder clear() {
                    super.clear();
                    bitField0_ = 0;
                    price_ = "";
                    currency_ = "";
                    return this;
                }

                @java.lang.Override
                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return instrument.Instrument.internal_static_instrument_TinkoffInstrument_Money_descriptor;
                }

                @java.lang.Override
                public instrument.Instrument.TinkoffInstrument.Money getDefaultInstanceForType() {
                    return instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance();
                }

                @java.lang.Override
                public instrument.Instrument.TinkoffInstrument.Money build() {
                    instrument.Instrument.TinkoffInstrument.Money result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                @java.lang.Override
                public instrument.Instrument.TinkoffInstrument.Money buildPartial() {
                    instrument.Instrument.TinkoffInstrument.Money result = new instrument.Instrument.TinkoffInstrument.Money(this);
                    if (bitField0_ != 0) {
                        buildPartial0(result);
                    }
                    onBuilt();
                    return result;
                }

                private void buildPartial0(instrument.Instrument.TinkoffInstrument.Money result) {
                    int from_bitField0_ = bitField0_;
                    if (((from_bitField0_ & 0x00000001) != 0)) {
                        result.price_ = price_;
                    }
                    if (((from_bitField0_ & 0x00000002) != 0)) {
                        result.currency_ = currency_;
                    }
                }

                @java.lang.Override
                public Builder clone() {
                    return super.clone();
                }

                @java.lang.Override
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return super.setField(field, value);
                }

                @java.lang.Override
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return super.clearField(field);
                }

                @java.lang.Override
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                @java.lang.Override
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                @java.lang.Override
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return super.addRepeatedField(field, value);
                }

                @java.lang.Override
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof instrument.Instrument.TinkoffInstrument.Money) {
                        return mergeFrom((instrument.Instrument.TinkoffInstrument.Money) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(instrument.Instrument.TinkoffInstrument.Money other) {
                    if (other == instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance()) return this;
                    if (!other.getPrice().isEmpty()) {
                        price_ = other.price_;
                        bitField0_ |= 0x00000001;
                        onChanged();
                    }
                    if (!other.getCurrency().isEmpty()) {
                        currency_ = other.currency_;
                        bitField0_ |= 0x00000002;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public boolean isInitialized() {
                    return true;
                }

                @java.lang.Override
                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    if (extensionRegistry == null) {
                        throw new java.lang.NullPointerException();
                    }
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                case 10: {
                                    price_ = input.readStringRequireUtf8();
                                    bitField0_ |= 0x00000001;
                                    break;
                                } // case 10
                                case 18: {
                                    currency_ = input.readStringRequireUtf8();
                                    bitField0_ |= 0x00000002;
                                    break;
                                } // case 18
                                default: {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        done = true; // was an endgroup tag
                                    }
                                    break;
                                } // default:
                            } // switch (tag)
                        } // while (!done)
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw e.unwrapIOException();
                    } finally {
                        onChanged();
                    } // finally
                    return this;
                }

                /**
                 * <code>string price = 1;</code>
                 *
                 * @return The price.
                 */
                public java.lang.String getPrice() {
                    java.lang.Object ref = price_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        price_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string price = 1;</code>
                 *
                 * @param value The price to set.
                 * @return This builder for chaining.
                 */
                public Builder setPrice(
                        java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    price_ = value;
                    bitField0_ |= 0x00000001;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string price = 1;</code>
                 *
                 * @return The bytes for price.
                 */
                public com.google.protobuf.ByteString
                getPriceBytes() {
                    java.lang.Object ref = price_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        price_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string price = 1;</code>
                 *
                 * @param value The bytes for price to set.
                 * @return This builder for chaining.
                 */
                public Builder setPriceBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    price_ = value;
                    bitField0_ |= 0x00000001;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string price = 1;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearPrice() {
                    price_ = getDefaultInstance().getPrice();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                    return this;
                }

                /**
                 * <code>string currency = 2;</code>
                 *
                 * @return The currency.
                 */
                public java.lang.String getCurrency() {
                    java.lang.Object ref = currency_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        currency_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string currency = 2;</code>
                 *
                 * @param value The currency to set.
                 * @return This builder for chaining.
                 */
                public Builder setCurrency(
                        java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    currency_ = value;
                    bitField0_ |= 0x00000002;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string currency = 2;</code>
                 *
                 * @return The bytes for currency.
                 */
                public com.google.protobuf.ByteString
                getCurrencyBytes() {
                    java.lang.Object ref = currency_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        currency_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string currency = 2;</code>
                 *
                 * @param value The bytes for currency to set.
                 * @return This builder for chaining.
                 */
                public Builder setCurrencyBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    currency_ = value;
                    bitField0_ |= 0x00000002;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string currency = 2;</code>
                 *
                 * @return This builder for chaining.
                 */
                public Builder clearCurrency() {
                    currency_ = getDefaultInstance().getCurrency();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                @java.lang.Override
                public Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:instrument.TinkoffInstrument.Money)
            }

        }

        /**
         * Protobuf type {@code instrument.TinkoffInstrument}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:instrument.TinkoffInstrument)
                instrument.Instrument.TinkoffInstrumentOrBuilder {
            private int bitField0_;
            private java.lang.Object uID_ = "";
            private java.lang.Object figi_ = "";
            private java.lang.Object ticker_ = "";
            private java.lang.Object name_ = "";
            private java.lang.Object type_ = "";
            private java.lang.Object countryOfRiskName_ = "";
            private int lot_;
            private java.lang.Object currency_ = "";
            private instrument.Instrument.TinkoffInstrument.Money currentInstrumentPrice_;
            private com.google.protobuf.SingleFieldBuilderV3<
                    instrument.Instrument.TinkoffInstrument.Money, instrument.Instrument.TinkoffInstrument.Money.Builder, instrument.Instrument.TinkoffInstrument.MoneyOrBuilder> currentInstrumentPriceBuilder_;
            private instrument.Instrument.TinkoffInstrument.Money currentLotPrice_;
            private com.google.protobuf.SingleFieldBuilderV3<
                    instrument.Instrument.TinkoffInstrument.Money, instrument.Instrument.TinkoffInstrument.Money.Builder, instrument.Instrument.TinkoffInstrument.MoneyOrBuilder> currentLotPriceBuilder_;
            private java.lang.Object securityTradingStatus_ = "";
            private boolean apiTradeAvailableFlag_;
            private boolean buyAvailableFlag_;
            private boolean sellAvailableFlag_;
            private java.lang.Object exchange_ = "";
            private java.lang.Object realExchange_ = "";

            // Construct using instrument.Instrument.TinkoffInstrument.newBuilder()
            private Builder() {

            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);

            }

            public static com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return instrument.Instrument.internal_static_instrument_TinkoffInstrument_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return instrument.Instrument.internal_static_instrument_TinkoffInstrument_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                instrument.Instrument.TinkoffInstrument.class, instrument.Instrument.TinkoffInstrument.Builder.class);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                uID_ = "";
                figi_ = "";
                ticker_ = "";
                name_ = "";
                type_ = "";
                countryOfRiskName_ = "";
                lot_ = 0;
                currency_ = "";
                currentInstrumentPrice_ = null;
                if (currentInstrumentPriceBuilder_ != null) {
                    currentInstrumentPriceBuilder_.dispose();
                    currentInstrumentPriceBuilder_ = null;
                }
                currentLotPrice_ = null;
                if (currentLotPriceBuilder_ != null) {
                    currentLotPriceBuilder_.dispose();
                    currentLotPriceBuilder_ = null;
                }
                securityTradingStatus_ = "";
                apiTradeAvailableFlag_ = false;
                buyAvailableFlag_ = false;
                sellAvailableFlag_ = false;
                exchange_ = "";
                realExchange_ = "";
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return instrument.Instrument.internal_static_instrument_TinkoffInstrument_descriptor;
            }

            @java.lang.Override
            public instrument.Instrument.TinkoffInstrument getDefaultInstanceForType() {
                return instrument.Instrument.TinkoffInstrument.getDefaultInstance();
            }

            @java.lang.Override
            public instrument.Instrument.TinkoffInstrument build() {
                instrument.Instrument.TinkoffInstrument result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public instrument.Instrument.TinkoffInstrument buildPartial() {
                instrument.Instrument.TinkoffInstrument result = new instrument.Instrument.TinkoffInstrument(this);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartial0(instrument.Instrument.TinkoffInstrument result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.uID_ = uID_;
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.figi_ = figi_;
                }
                if (((from_bitField0_ & 0x00000004) != 0)) {
                    result.ticker_ = ticker_;
                }
                if (((from_bitField0_ & 0x00000008) != 0)) {
                    result.name_ = name_;
                }
                if (((from_bitField0_ & 0x00000010) != 0)) {
                    result.type_ = type_;
                }
                if (((from_bitField0_ & 0x00000020) != 0)) {
                    result.countryOfRiskName_ = countryOfRiskName_;
                }
                if (((from_bitField0_ & 0x00000040) != 0)) {
                    result.lot_ = lot_;
                }
                if (((from_bitField0_ & 0x00000080) != 0)) {
                    result.currency_ = currency_;
                }
                if (((from_bitField0_ & 0x00000100) != 0)) {
                    result.currentInstrumentPrice_ = currentInstrumentPriceBuilder_ == null
                            ? currentInstrumentPrice_
                            : currentInstrumentPriceBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000200) != 0)) {
                    result.currentLotPrice_ = currentLotPriceBuilder_ == null
                            ? currentLotPrice_
                            : currentLotPriceBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000400) != 0)) {
                    result.securityTradingStatus_ = securityTradingStatus_;
                }
                if (((from_bitField0_ & 0x00000800) != 0)) {
                    result.apiTradeAvailableFlag_ = apiTradeAvailableFlag_;
                }
                if (((from_bitField0_ & 0x00001000) != 0)) {
                    result.buyAvailableFlag_ = buyAvailableFlag_;
                }
                if (((from_bitField0_ & 0x00002000) != 0)) {
                    result.sellAvailableFlag_ = sellAvailableFlag_;
                }
                if (((from_bitField0_ & 0x00004000) != 0)) {
                    result.exchange_ = exchange_;
                }
                if (((from_bitField0_ & 0x00008000) != 0)) {
                    result.realExchange_ = realExchange_;
                }
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof instrument.Instrument.TinkoffInstrument) {
                    return mergeFrom((instrument.Instrument.TinkoffInstrument) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(instrument.Instrument.TinkoffInstrument other) {
                if (other == instrument.Instrument.TinkoffInstrument.getDefaultInstance()) return this;
                if (!other.getUID().isEmpty()) {
                    uID_ = other.uID_;
                    bitField0_ |= 0x00000001;
                    onChanged();
                }
                if (!other.getFigi().isEmpty()) {
                    figi_ = other.figi_;
                    bitField0_ |= 0x00000002;
                    onChanged();
                }
                if (!other.getTicker().isEmpty()) {
                    ticker_ = other.ticker_;
                    bitField0_ |= 0x00000004;
                    onChanged();
                }
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    bitField0_ |= 0x00000008;
                    onChanged();
                }
                if (!other.getType().isEmpty()) {
                    type_ = other.type_;
                    bitField0_ |= 0x00000010;
                    onChanged();
                }
                if (!other.getCountryOfRiskName().isEmpty()) {
                    countryOfRiskName_ = other.countryOfRiskName_;
                    bitField0_ |= 0x00000020;
                    onChanged();
                }
                if (other.getLot() != 0) {
                    setLot(other.getLot());
                }
                if (!other.getCurrency().isEmpty()) {
                    currency_ = other.currency_;
                    bitField0_ |= 0x00000080;
                    onChanged();
                }
                if (other.hasCurrentInstrumentPrice()) {
                    mergeCurrentInstrumentPrice(other.getCurrentInstrumentPrice());
                }
                if (other.hasCurrentLotPrice()) {
                    mergeCurrentLotPrice(other.getCurrentLotPrice());
                }
                if (!other.getSecurityTradingStatus().isEmpty()) {
                    securityTradingStatus_ = other.securityTradingStatus_;
                    bitField0_ |= 0x00000400;
                    onChanged();
                }
                if (other.getApiTradeAvailableFlag()) {
                    setApiTradeAvailableFlag(other.getApiTradeAvailableFlag());
                }
                if (other.getBuyAvailableFlag()) {
                    setBuyAvailableFlag(other.getBuyAvailableFlag());
                }
                if (other.getSellAvailableFlag()) {
                    setSellAvailableFlag(other.getSellAvailableFlag());
                }
                if (!other.getExchange().isEmpty()) {
                    exchange_ = other.exchange_;
                    bitField0_ |= 0x00004000;
                    onChanged();
                }
                if (!other.getRealExchange().isEmpty()) {
                    realExchange_ = other.realExchange_;
                    bitField0_ |= 0x00008000;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                uID_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000001;
                                break;
                            } // case 10
                            case 18: {
                                figi_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000002;
                                break;
                            } // case 18
                            case 26: {
                                ticker_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000004;
                                break;
                            } // case 26
                            case 34: {
                                name_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000008;
                                break;
                            } // case 34
                            case 42: {
                                type_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000010;
                                break;
                            } // case 42
                            case 50: {
                                countryOfRiskName_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000020;
                                break;
                            } // case 50
                            case 56: {
                                lot_ = input.readInt32();
                                bitField0_ |= 0x00000040;
                                break;
                            } // case 56
                            case 66: {
                                currency_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000080;
                                break;
                            } // case 66
                            case 74: {
                                input.readMessage(
                                        getCurrentInstrumentPriceFieldBuilder().getBuilder(),
                                        extensionRegistry);
                                bitField0_ |= 0x00000100;
                                break;
                            } // case 74
                            case 82: {
                                input.readMessage(
                                        getCurrentLotPriceFieldBuilder().getBuilder(),
                                        extensionRegistry);
                                bitField0_ |= 0x00000200;
                                break;
                            } // case 82
                            case 90: {
                                securityTradingStatus_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00000400;
                                break;
                            } // case 90
                            case 96: {
                                apiTradeAvailableFlag_ = input.readBool();
                                bitField0_ |= 0x00000800;
                                break;
                            } // case 96
                            case 104: {
                                buyAvailableFlag_ = input.readBool();
                                bitField0_ |= 0x00001000;
                                break;
                            } // case 104
                            case 112: {
                                sellAvailableFlag_ = input.readBool();
                                bitField0_ |= 0x00002000;
                                break;
                            } // case 112
                            case 122: {
                                exchange_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00004000;
                                break;
                            } // case 122
                            case 130: {
                                realExchange_ = input.readStringRequireUtf8();
                                bitField0_ |= 0x00008000;
                                break;
                            } // case 130
                            default: {
                                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                    done = true; // was an endgroup tag
                                }
                                break;
                            } // default:
                        } // switch (tag)
                    } // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                } // finally
                return this;
            }

            /**
             * <code>string uID = 1;</code>
             *
             * @return The uID.
             */
            public java.lang.String getUID() {
                java.lang.Object ref = uID_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    uID_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string uID = 1;</code>
             *
             * @param value The uID to set.
             * @return This builder for chaining.
             */
            public Builder setUID(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                uID_ = value;
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>string uID = 1;</code>
             *
             * @return The bytes for uID.
             */
            public com.google.protobuf.ByteString
            getUIDBytes() {
                java.lang.Object ref = uID_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    uID_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string uID = 1;</code>
             *
             * @param value The bytes for uID to set.
             * @return This builder for chaining.
             */
            public Builder setUIDBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                uID_ = value;
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>string uID = 1;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearUID() {
                uID_ = getDefaultInstance().getUID();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            /**
             * <code>string figi = 2;</code>
             *
             * @return The figi.
             */
            public java.lang.String getFigi() {
                java.lang.Object ref = figi_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    figi_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string figi = 2;</code>
             *
             * @param value The figi to set.
             * @return This builder for chaining.
             */
            public Builder setFigi(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                figi_ = value;
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <code>string figi = 2;</code>
             *
             * @return The bytes for figi.
             */
            public com.google.protobuf.ByteString
            getFigiBytes() {
                java.lang.Object ref = figi_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    figi_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string figi = 2;</code>
             *
             * @param value The bytes for figi to set.
             * @return This builder for chaining.
             */
            public Builder setFigiBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                figi_ = value;
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <code>string figi = 2;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearFigi() {
                figi_ = getDefaultInstance().getFigi();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            /**
             * <code>string ticker = 3;</code>
             *
             * @return The ticker.
             */
            public java.lang.String getTicker() {
                java.lang.Object ref = ticker_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    ticker_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string ticker = 3;</code>
             *
             * @param value The ticker to set.
             * @return This builder for chaining.
             */
            public Builder setTicker(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ticker_ = value;
                bitField0_ |= 0x00000004;
                onChanged();
                return this;
            }

            /**
             * <code>string ticker = 3;</code>
             *
             * @return The bytes for ticker.
             */
            public com.google.protobuf.ByteString
            getTickerBytes() {
                java.lang.Object ref = ticker_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    ticker_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string ticker = 3;</code>
             *
             * @param value The bytes for ticker to set.
             * @return This builder for chaining.
             */
            public Builder setTickerBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ticker_ = value;
                bitField0_ |= 0x00000004;
                onChanged();
                return this;
            }

            /**
             * <code>string ticker = 3;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearTicker() {
                ticker_ = getDefaultInstance().getTicker();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            /**
             * <code>string name = 4;</code>
             *
             * @return The name.
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string name = 4;</code>
             *
             * @param value The name to set.
             * @return This builder for chaining.
             */
            public Builder setName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                name_ = value;
                bitField0_ |= 0x00000008;
                onChanged();
                return this;
            }

            /**
             * <code>string name = 4;</code>
             *
             * @return The bytes for name.
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string name = 4;</code>
             *
             * @param value The bytes for name to set.
             * @return This builder for chaining.
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                name_ = value;
                bitField0_ |= 0x00000008;
                onChanged();
                return this;
            }

            /**
             * <code>string name = 4;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearName() {
                name_ = getDefaultInstance().getName();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            /**
             * <code>string type = 5;</code>
             *
             * @return The type.
             */
            public java.lang.String getType() {
                java.lang.Object ref = type_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    type_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string type = 5;</code>
             *
             * @param value The type to set.
             * @return This builder for chaining.
             */
            public Builder setType(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                type_ = value;
                bitField0_ |= 0x00000010;
                onChanged();
                return this;
            }

            /**
             * <code>string type = 5;</code>
             *
             * @return The bytes for type.
             */
            public com.google.protobuf.ByteString
            getTypeBytes() {
                java.lang.Object ref = type_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    type_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string type = 5;</code>
             *
             * @param value The bytes for type to set.
             * @return This builder for chaining.
             */
            public Builder setTypeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                type_ = value;
                bitField0_ |= 0x00000010;
                onChanged();
                return this;
            }

            /**
             * <code>string type = 5;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearType() {
                type_ = getDefaultInstance().getType();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            /**
             * <code>string country_of_risk_name = 6;</code>
             *
             * @return The countryOfRiskName.
             */
            public java.lang.String getCountryOfRiskName() {
                java.lang.Object ref = countryOfRiskName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    countryOfRiskName_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string country_of_risk_name = 6;</code>
             *
             * @param value The countryOfRiskName to set.
             * @return This builder for chaining.
             */
            public Builder setCountryOfRiskName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                countryOfRiskName_ = value;
                bitField0_ |= 0x00000020;
                onChanged();
                return this;
            }

            /**
             * <code>string country_of_risk_name = 6;</code>
             *
             * @return The bytes for countryOfRiskName.
             */
            public com.google.protobuf.ByteString
            getCountryOfRiskNameBytes() {
                java.lang.Object ref = countryOfRiskName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    countryOfRiskName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string country_of_risk_name = 6;</code>
             *
             * @param value The bytes for countryOfRiskName to set.
             * @return This builder for chaining.
             */
            public Builder setCountryOfRiskNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                countryOfRiskName_ = value;
                bitField0_ |= 0x00000020;
                onChanged();
                return this;
            }

            /**
             * <code>string country_of_risk_name = 6;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearCountryOfRiskName() {
                countryOfRiskName_ = getDefaultInstance().getCountryOfRiskName();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            /**
             * <code>int32 lot = 7;</code>
             *
             * @return The lot.
             */
            @java.lang.Override
            public int getLot() {
                return lot_;
            }

            /**
             * <code>int32 lot = 7;</code>
             *
             * @param value The lot to set.
             * @return This builder for chaining.
             */
            public Builder setLot(int value) {

                lot_ = value;
                bitField0_ |= 0x00000040;
                onChanged();
                return this;
            }

            /**
             * <code>int32 lot = 7;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearLot() {
                bitField0_ = (bitField0_ & ~0x00000040);
                lot_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>string currency = 8;</code>
             *
             * @return The currency.
             */
            public java.lang.String getCurrency() {
                java.lang.Object ref = currency_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    currency_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string currency = 8;</code>
             *
             * @param value The currency to set.
             * @return This builder for chaining.
             */
            public Builder setCurrency(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                currency_ = value;
                bitField0_ |= 0x00000080;
                onChanged();
                return this;
            }

            /**
             * <code>string currency = 8;</code>
             *
             * @return The bytes for currency.
             */
            public com.google.protobuf.ByteString
            getCurrencyBytes() {
                java.lang.Object ref = currency_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    currency_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string currency = 8;</code>
             *
             * @param value The bytes for currency to set.
             * @return This builder for chaining.
             */
            public Builder setCurrencyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                currency_ = value;
                bitField0_ |= 0x00000080;
                onChanged();
                return this;
            }

            /**
             * <code>string currency = 8;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearCurrency() {
                currency_ = getDefaultInstance().getCurrency();
                bitField0_ = (bitField0_ & ~0x00000080);
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             *
             * @return Whether the currentInstrumentPrice field is set.
             */
            public boolean hasCurrentInstrumentPrice() {
                return ((bitField0_ & 0x00000100) != 0);
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             *
             * @return The currentInstrumentPrice.
             */
            public instrument.Instrument.TinkoffInstrument.Money getCurrentInstrumentPrice() {
                if (currentInstrumentPriceBuilder_ == null) {
                    return currentInstrumentPrice_ == null ? instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentInstrumentPrice_;
                } else {
                    return currentInstrumentPriceBuilder_.getMessage();
                }
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             */
            public Builder setCurrentInstrumentPrice(instrument.Instrument.TinkoffInstrument.Money value) {
                if (currentInstrumentPriceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    currentInstrumentPrice_ = value;
                } else {
                    currentInstrumentPriceBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000100;
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             */
            public Builder setCurrentInstrumentPrice(
                    instrument.Instrument.TinkoffInstrument.Money.Builder builderForValue) {
                if (currentInstrumentPriceBuilder_ == null) {
                    currentInstrumentPrice_ = builderForValue.build();
                } else {
                    currentInstrumentPriceBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000100;
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             */
            public Builder mergeCurrentInstrumentPrice(instrument.Instrument.TinkoffInstrument.Money value) {
                if (currentInstrumentPriceBuilder_ == null) {
                    if (((bitField0_ & 0x00000100) != 0) &&
                            currentInstrumentPrice_ != null &&
                            currentInstrumentPrice_ != instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance()) {
                        getCurrentInstrumentPriceBuilder().mergeFrom(value);
                    } else {
                        currentInstrumentPrice_ = value;
                    }
                } else {
                    currentInstrumentPriceBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000100;
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             */
            public Builder clearCurrentInstrumentPrice() {
                bitField0_ = (bitField0_ & ~0x00000100);
                currentInstrumentPrice_ = null;
                if (currentInstrumentPriceBuilder_ != null) {
                    currentInstrumentPriceBuilder_.dispose();
                    currentInstrumentPriceBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             */
            public instrument.Instrument.TinkoffInstrument.Money.Builder getCurrentInstrumentPriceBuilder() {
                bitField0_ |= 0x00000100;
                onChanged();
                return getCurrentInstrumentPriceFieldBuilder().getBuilder();
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             */
            public instrument.Instrument.TinkoffInstrument.MoneyOrBuilder getCurrentInstrumentPriceOrBuilder() {
                if (currentInstrumentPriceBuilder_ != null) {
                    return currentInstrumentPriceBuilder_.getMessageOrBuilder();
                } else {
                    return currentInstrumentPrice_ == null ?
                            instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentInstrumentPrice_;
                }
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_instrument_price = 9;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    instrument.Instrument.TinkoffInstrument.Money, instrument.Instrument.TinkoffInstrument.Money.Builder, instrument.Instrument.TinkoffInstrument.MoneyOrBuilder>
            getCurrentInstrumentPriceFieldBuilder() {
                if (currentInstrumentPriceBuilder_ == null) {
                    currentInstrumentPriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            instrument.Instrument.TinkoffInstrument.Money, instrument.Instrument.TinkoffInstrument.Money.Builder, instrument.Instrument.TinkoffInstrument.MoneyOrBuilder>(
                            getCurrentInstrumentPrice(),
                            getParentForChildren(),
                            isClean());
                    currentInstrumentPrice_ = null;
                }
                return currentInstrumentPriceBuilder_;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             *
             * @return Whether the currentLotPrice field is set.
             */
            public boolean hasCurrentLotPrice() {
                return ((bitField0_ & 0x00000200) != 0);
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             *
             * @return The currentLotPrice.
             */
            public instrument.Instrument.TinkoffInstrument.Money getCurrentLotPrice() {
                if (currentLotPriceBuilder_ == null) {
                    return currentLotPrice_ == null ? instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentLotPrice_;
                } else {
                    return currentLotPriceBuilder_.getMessage();
                }
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             */
            public Builder setCurrentLotPrice(instrument.Instrument.TinkoffInstrument.Money value) {
                if (currentLotPriceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    currentLotPrice_ = value;
                } else {
                    currentLotPriceBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000200;
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             */
            public Builder setCurrentLotPrice(
                    instrument.Instrument.TinkoffInstrument.Money.Builder builderForValue) {
                if (currentLotPriceBuilder_ == null) {
                    currentLotPrice_ = builderForValue.build();
                } else {
                    currentLotPriceBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000200;
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             */
            public Builder mergeCurrentLotPrice(instrument.Instrument.TinkoffInstrument.Money value) {
                if (currentLotPriceBuilder_ == null) {
                    if (((bitField0_ & 0x00000200) != 0) &&
                            currentLotPrice_ != null &&
                            currentLotPrice_ != instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance()) {
                        getCurrentLotPriceBuilder().mergeFrom(value);
                    } else {
                        currentLotPrice_ = value;
                    }
                } else {
                    currentLotPriceBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000200;
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             */
            public Builder clearCurrentLotPrice() {
                bitField0_ = (bitField0_ & ~0x00000200);
                currentLotPrice_ = null;
                if (currentLotPriceBuilder_ != null) {
                    currentLotPriceBuilder_.dispose();
                    currentLotPriceBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             */
            public instrument.Instrument.TinkoffInstrument.Money.Builder getCurrentLotPriceBuilder() {
                bitField0_ |= 0x00000200;
                onChanged();
                return getCurrentLotPriceFieldBuilder().getBuilder();
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             */
            public instrument.Instrument.TinkoffInstrument.MoneyOrBuilder getCurrentLotPriceOrBuilder() {
                if (currentLotPriceBuilder_ != null) {
                    return currentLotPriceBuilder_.getMessageOrBuilder();
                } else {
                    return currentLotPrice_ == null ?
                            instrument.Instrument.TinkoffInstrument.Money.getDefaultInstance() : currentLotPrice_;
                }
            }

            /**
             * <code>.instrument.TinkoffInstrument.Money current_lot_price = 10;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    instrument.Instrument.TinkoffInstrument.Money, instrument.Instrument.TinkoffInstrument.Money.Builder, instrument.Instrument.TinkoffInstrument.MoneyOrBuilder>
            getCurrentLotPriceFieldBuilder() {
                if (currentLotPriceBuilder_ == null) {
                    currentLotPriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            instrument.Instrument.TinkoffInstrument.Money, instrument.Instrument.TinkoffInstrument.Money.Builder, instrument.Instrument.TinkoffInstrument.MoneyOrBuilder>(
                            getCurrentLotPrice(),
                            getParentForChildren(),
                            isClean());
                    currentLotPrice_ = null;
                }
                return currentLotPriceBuilder_;
            }

            /**
             * <code>string securityTradingStatus = 11;</code>
             *
             * @return The securityTradingStatus.
             */
            public java.lang.String getSecurityTradingStatus() {
                java.lang.Object ref = securityTradingStatus_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    securityTradingStatus_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string securityTradingStatus = 11;</code>
             *
             * @param value The securityTradingStatus to set.
             * @return This builder for chaining.
             */
            public Builder setSecurityTradingStatus(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                securityTradingStatus_ = value;
                bitField0_ |= 0x00000400;
                onChanged();
                return this;
            }

            /**
             * <code>string securityTradingStatus = 11;</code>
             *
             * @return The bytes for securityTradingStatus.
             */
            public com.google.protobuf.ByteString
            getSecurityTradingStatusBytes() {
                java.lang.Object ref = securityTradingStatus_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    securityTradingStatus_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string securityTradingStatus = 11;</code>
             *
             * @param value The bytes for securityTradingStatus to set.
             * @return This builder for chaining.
             */
            public Builder setSecurityTradingStatusBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                securityTradingStatus_ = value;
                bitField0_ |= 0x00000400;
                onChanged();
                return this;
            }

            /**
             * <code>string securityTradingStatus = 11;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearSecurityTradingStatus() {
                securityTradingStatus_ = getDefaultInstance().getSecurityTradingStatus();
                bitField0_ = (bitField0_ & ~0x00000400);
                onChanged();
                return this;
            }

            /**
             * <code>bool api_trade_available_flag = 12;</code>
             *
             * @return The apiTradeAvailableFlag.
             */
            @java.lang.Override
            public boolean getApiTradeAvailableFlag() {
                return apiTradeAvailableFlag_;
            }

            /**
             * <code>bool api_trade_available_flag = 12;</code>
             *
             * @param value The apiTradeAvailableFlag to set.
             * @return This builder for chaining.
             */
            public Builder setApiTradeAvailableFlag(boolean value) {

                apiTradeAvailableFlag_ = value;
                bitField0_ |= 0x00000800;
                onChanged();
                return this;
            }

            /**
             * <code>bool api_trade_available_flag = 12;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearApiTradeAvailableFlag() {
                bitField0_ = (bitField0_ & ~0x00000800);
                apiTradeAvailableFlag_ = false;
                onChanged();
                return this;
            }

            /**
             * <code>bool buy_available_flag = 13;</code>
             *
             * @return The buyAvailableFlag.
             */
            @java.lang.Override
            public boolean getBuyAvailableFlag() {
                return buyAvailableFlag_;
            }

            /**
             * <code>bool buy_available_flag = 13;</code>
             *
             * @param value The buyAvailableFlag to set.
             * @return This builder for chaining.
             */
            public Builder setBuyAvailableFlag(boolean value) {

                buyAvailableFlag_ = value;
                bitField0_ |= 0x00001000;
                onChanged();
                return this;
            }

            /**
             * <code>bool buy_available_flag = 13;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearBuyAvailableFlag() {
                bitField0_ = (bitField0_ & ~0x00001000);
                buyAvailableFlag_ = false;
                onChanged();
                return this;
            }

            /**
             * <code>bool sell_available_flag = 14;</code>
             *
             * @return The sellAvailableFlag.
             */
            @java.lang.Override
            public boolean getSellAvailableFlag() {
                return sellAvailableFlag_;
            }

            /**
             * <code>bool sell_available_flag = 14;</code>
             *
             * @param value The sellAvailableFlag to set.
             * @return This builder for chaining.
             */
            public Builder setSellAvailableFlag(boolean value) {

                sellAvailableFlag_ = value;
                bitField0_ |= 0x00002000;
                onChanged();
                return this;
            }

            /**
             * <code>bool sell_available_flag = 14;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearSellAvailableFlag() {
                bitField0_ = (bitField0_ & ~0x00002000);
                sellAvailableFlag_ = false;
                onChanged();
                return this;
            }

            /**
             * <code>string exchange = 15;</code>
             *
             * @return The exchange.
             */
            public java.lang.String getExchange() {
                java.lang.Object ref = exchange_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    exchange_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string exchange = 15;</code>
             *
             * @param value The exchange to set.
             * @return This builder for chaining.
             */
            public Builder setExchange(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                exchange_ = value;
                bitField0_ |= 0x00004000;
                onChanged();
                return this;
            }

            /**
             * <code>string exchange = 15;</code>
             *
             * @return The bytes for exchange.
             */
            public com.google.protobuf.ByteString
            getExchangeBytes() {
                java.lang.Object ref = exchange_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    exchange_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string exchange = 15;</code>
             *
             * @param value The bytes for exchange to set.
             * @return This builder for chaining.
             */
            public Builder setExchangeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                exchange_ = value;
                bitField0_ |= 0x00004000;
                onChanged();
                return this;
            }

            /**
             * <code>string exchange = 15;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearExchange() {
                exchange_ = getDefaultInstance().getExchange();
                bitField0_ = (bitField0_ & ~0x00004000);
                onChanged();
                return this;
            }

            /**
             * <code>string real_exchange = 16;</code>
             *
             * @return The realExchange.
             */
            public java.lang.String getRealExchange() {
                java.lang.Object ref = realExchange_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    realExchange_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string real_exchange = 16;</code>
             *
             * @param value The realExchange to set.
             * @return This builder for chaining.
             */
            public Builder setRealExchange(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                realExchange_ = value;
                bitField0_ |= 0x00008000;
                onChanged();
                return this;
            }

            /**
             * <code>string real_exchange = 16;</code>
             *
             * @return The bytes for realExchange.
             */
            public com.google.protobuf.ByteString
            getRealExchangeBytes() {
                java.lang.Object ref = realExchange_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    realExchange_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string real_exchange = 16;</code>
             *
             * @param value The bytes for realExchange to set.
             * @return This builder for chaining.
             */
            public Builder setRealExchangeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                realExchange_ = value;
                bitField0_ |= 0x00008000;
                onChanged();
                return this;
            }

            /**
             * <code>string real_exchange = 16;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearRealExchange() {
                realExchange_ = getDefaultInstance().getRealExchange();
                bitField0_ = (bitField0_ & ~0x00008000);
                onChanged();
                return this;
            }

            @java.lang.Override
            public Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:instrument.TinkoffInstrument)
        }

    }

    // @@protoc_insertion_point(outer_class_scope)
}
